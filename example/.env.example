# LangChat Example App Environment Configuration
# Copy this file to .env and fill in your credentials

# Supabase Configuration
EXPO_PUBLIC_SUPABASE_URL=your_supabase_project_url_here
EXPO_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# LangGraph Configuration
EXPO_PUBLIC_LANGGRAPH_API_URL=https://your-langgraph-deployment.com
EXPO_PUBLIC_LANGGRAPH_ASSISTANT_ID=your_assistant_id_here

# Example values (replace with your actual project details):
# EXPO_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
# EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# EXPO_PUBLIC_LANGGRAPH_API_URL=https://your-deployment.langsmith.com
# EXPO_PUBLIC_LANGGRAPH_ASSISTANT_ID=your-assistant-id

# Setup Instructions:

## Supabase Setup:
# 1. Create a Supabase project at https://supabase.com
# 2. Go to Project Settings > API
# 3. Copy the Project URL to EXPO_PUBLIC_SUPABASE_URL
# 4. Copy the anon/public key to EXPO_PUBLIC_SUPABASE_ANON_KEY
# 5. Run the SQL schema from src/data/schemas/index.sql in your Supabase SQL editor
# 6. Enable Row Level Security on all tables

## LangGraph Setup:
# 1. Create a LangGraph deployment (LangSmith or self-hosted)
# 2. Copy your LangGraph API URL to EXPO_PUBLIC_LANGGRAPH_API_URL
# 3. Copy your assistant ID to EXPO_PUBLIC_LANGGRAPH_ASSISTANT_ID
# 4. Ensure your LangGraph deployment accepts Supabase JWT tokens for authentication

## Run the app:
# 1. Copy this file to .env and fill in your credentials
# 2. Install dependencies: npm install
# 3. Start the example app: npm start
